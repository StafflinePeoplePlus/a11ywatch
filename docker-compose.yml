version: "3.0"
services:
  api:
    container_name: api
    env_file: ./api/.env
    build:
      context: ./api
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./api/src:/usr/src/app/src
      - ./api/.env:/usr/src/app/.env
      - ./api/package.json:/usr/src/app/package.json
      - ./api/package-lock.json:/usr/src/app/package-lock.json
      - ./api/__tests__:/usr/src/app/__tests__
      - /usr/src/app/node_modules
    networks:
      - back-net
      - front-net
    ports:
      - "8080:8080"
    depends_on:
      - mongodb

  angelica:
    container_name: angelica
    env_file: ./angelica/.env
    build:
      context: ./angelica
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./angelica/src:/usr/src/app/src
      - ./angelica/package.json:/usr/src/app/package.json
      - ./angelica/package-lock.json:/usr/src/app/package-lock.json
      - ./angelica/__tests__:/usr/src/app/__tests__
      - /usr/src/app/node_modules
    networks:
      - back-net
    ports:
      - "8040:8040"

  mav:
    container_name: mav
    env_file: ./mav/.env
    build:
      context: ./mav
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./mav/src:/usr/src/app/src
      - ./mav/package.json:/usr/src/app/package.json
      - ./mav/package-lock.json:/usr/src/app/package-lock.json
      - ./mav/__tests__:/usr/src/app/__tests__
      - /usr/src/app/node_modules
    networks:
      - back-net
    ports:
      - "8020:8020"

  logger:
    container_name: logger
    image: jeffmendez19/logger
    volumes:
      - /usr/src/app/dist/logs
    networks:
      - back-net
    ports:
      - "8022:8022"
    environment:
      - PORT=${LOGGER_PORT:-8022}
  
  cdn-server:
    env_file: ./cdn-server/.env
    container_name: cdn-server
    build:
      context: ./cdn-server
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./cdn-server/src:/usr/src/app/src
      - ./cdn-server/package.json:/usr/src/app/package.json
      - ./cdn-server/package-lock.json:/usr/src/app/package-lock.json
      - ./cdn-server/__tests__:/usr/src/app/__tests__
      - /usr/src/app/node_modules
    networks:
      - back-net
      - front-net
    ports:
      - "8090:8090"

  iframe-server:
    env_file: ./iframe-server/.env
    container_name: iframe-server
    build:
      context: ./iframe-server
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./iframe-server/src:/usr/src/app/src
      - ./iframe-server/package.json:/usr/src/app/package.json
      - ./iframe-server/package-lock.json:/usr/src/app/package-lock.json
      - ./iframe-server/__tests__:/usr/src/app/__tests__
      - /usr/src/app/node_modules
    networks:
      - front-net
    ports:
      - "8010:8010"

  crawler:
    container_name: crawler
    image: jeffmendez19/crawler
    networks:
      - back-net
    ports:
      - "8000:8000"
    environment: 
      - CRAWL_URL=http://api:8080/api/website-crawl-background

  mongodb:
    container_name: mongodb
    networks:
      - back-net
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb:/data/db
    environment:
      - MONGO_INITDB_DATABASE=${DB_NAME:-a11ywatch}

  mongoclient:
    container_name: mongoclient
    networks:
      - back-net
    image: huggingface/mongoku
    ports:
      - "3100:3100"
    environment:
      - MONGOKU_DEFAULT_HOST=${HOST:-mongodb://mongodb:27017/?compressors=zlib&gssapiServiceName=mongodb}
    depends_on:
      - mongodb

networks:
  front-net:
  back-net:
volumes:
  mongodb:
  api:
  angelica:
  watcher:
  cdn-server:
  iframe-server:
  logger:
